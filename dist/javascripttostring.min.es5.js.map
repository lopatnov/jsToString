{"version":3,"file":"javascripttostring.min.es5.js","sources":["../node_modules/@lopatnov/get-internal-type/dist/get-internal-type.es.js","../src/javascripttostring.ts"],"sourcesContent":["var types = {}, typesToString = types.toString, buildInList = [\r\n    \"Boolean\",\r\n    \"Number\",\r\n    \"String\",\r\n    \"Function\",\r\n    \"Array\",\r\n    \"Date\",\r\n    \"RegExp\",\r\n    \"Object\",\r\n    \"Error\",\r\n    \"Promise\",\r\n    \"Generator\",\r\n    \"GeneratorFunction\",\r\n    \"ArrayBuffer\",\r\n    \"DataView\"\r\n], typedArrays = [\r\n    \"Int8Array\",\r\n    \"Uint8Array\",\r\n    \"Uint8ClampedArray\",\r\n    \"Int16Array\",\r\n    \"Uint16Array\",\r\n    \"Int32Array\",\r\n    \"Uint32Array\",\r\n    \"Float32Array\",\r\n    \"Float64Array\",\r\n    \"BigInt64Array\",\r\n    \"BigUint64Array\"\r\n], maps = [\"Map\", \"WeakMap\"], sets = [\"Set\", \"WeakSet\"];\r\nbuildInList.forEach(function (name) {\r\n    types[\"[object \" + name + \"]\"] = name.toLowerCase();\r\n});\r\nmaps.forEach(function (name) {\r\n    types[\"[object \" + name + \"]\"] = \"map\";\r\n});\r\nsets.forEach(function (name) {\r\n    types[\"[object \" + name + \"]\"] = \"set\";\r\n});\r\ntypedArrays.forEach(function (name) {\r\n    types[\"[object \" + name + \"]\"] = \"typedarray\";\r\n});\r\nfunction getInternalType(obj) {\r\n    return obj == null\r\n        ? obj + \"\"\r\n        : typeof obj === \"object\" || typeof obj === \"function\"\r\n            ? types[typesToString.call(obj)] || \"object\"\r\n            : typeof obj;\r\n}\n\nexport default getInternalType;\n//# sourceMappingURL=get-internal-type.es.js.map\n","import getObjectType from \"@lopatnov/get-internal-type\";\r\n\r\nexport interface IJ2SOptions {\r\n  includeFunctionProperties?: boolean; // default true\r\n  includeFunctionPrototype?: boolean; // default true\r\n  includeBuffers?: boolean; // default true\r\n  nestedObjectsAmount?: number; // default Number.POSITIVE_INFINITY\r\n  nestedArraysAmount?: number; // default Number.POSITIVE_INFINITY\r\n  nestedFunctionsAmount?: number; // default Number.POSITIVE_INFINITY\r\n}\r\n\r\ninterface RefInstance {\r\n  historyRef: Array<any>,\r\n  source: any\r\n}\r\n\r\nvar refs: RefInstance[] = [];\r\nvar counter = 0;\r\n\r\ninterface IJ2SHistory {\r\n  references: any[];\r\n  nestedObjectsLeft: number;\r\n  nestedArraysLeft: number;\r\n  nestedFunctionsLeft: number;\r\n}\r\n\r\nfunction fillNativeFunctions(ext: any, obj: any, objName: string, fromPrototype: boolean = true) {\r\n  const arrNames = Object.getOwnPropertyNames(fromPrototype ? obj.prototype: obj);\r\n  const protoPath = fromPrototype ? '.prototype.' : '.';\r\n  for (let name of arrNames) {\r\n    if (['caller', 'callee', 'arguments'].indexOf(name) < 0) {\r\n      ext[`${objName}${protoPath}${name}`] = fromPrototype ? obj.prototype[name as any] : obj[name as any];\r\n    }\r\n  }\r\n}\r\n\r\nconst nativeFunctions = (function(){\r\n  const functions: any = {};\r\n  fillNativeFunctions(functions, Array, 'Array', false);\r\n  fillNativeFunctions(functions, Array, 'Array');\r\n  fillNativeFunctions(functions, JSON, 'JSON', false);\r\n  fillNativeFunctions(functions, Object, 'Object', false);\r\n  fillNativeFunctions(functions, Object, 'Object');\r\n  fillNativeFunctions(functions, Function, 'Function', false);\r\n  fillNativeFunctions(functions, Function, 'Function');\r\n  fillNativeFunctions(functions, Date, 'Date', false);\r\n  fillNativeFunctions(functions, String, 'String');\r\n  functions.Function = Function;\r\n  return functions;\r\n}());\r\n\r\nfunction numberToString(value: number): string {\r\n  if (Number.isNaN(value)) {\r\n    return \"Number.NaN\";\r\n  }\r\n  switch (value) {\r\n    case Number.POSITIVE_INFINITY:\r\n      return \"Number.POSITIVE_INFINITY\";\r\n    case Number.NEGATIVE_INFINITY:\r\n      return \"Number.NEGATIVE_INFINITY\";\r\n    case Number.EPSILON:\r\n      return \"Number.EPSILON\";\r\n    case Number.MAX_SAFE_INTEGER:\r\n      return \"Number.MAX_SAFE_INTEGER\";\r\n    case Number.MIN_SAFE_INTEGER:\r\n      return \"Number.MIN_SAFE_INTEGER\";\r\n    case Number.MAX_VALUE:\r\n      return \"Number.MAX_VALUE\";\r\n    case Number.MIN_VALUE:\r\n      return \"Number.MIN_VALUE\";\r\n    case Math.PI:\r\n      return \"Math.PI\";\r\n    case Math.E:\r\n      return \"Math.E\";\r\n    case Math.LN10:\r\n      return \"Math.LN10\";\r\n    case Math.LN2:\r\n      return \"Math.LN2\";\r\n    case Math.LOG10E:\r\n      return \"Math.LOG10E\";\r\n    case Math.LOG2E:\r\n      return \"Math.LOG2E\";\r\n    case Math.SQRT1_2:\r\n      return \"Math.SQRT1_2\";\r\n    case Math.SQRT2:\r\n      return \"Math.SQRT2\";\r\n    default:\r\n      return String(value);\r\n  }\r\n}\r\n\r\nfunction symbolToString(value: any): string {\r\n  switch (value) {\r\n    case Symbol.asyncIterator:\r\n    case Symbol.hasInstance:\r\n    case Symbol.isConcatSpreadable:\r\n    case Symbol.iterator:\r\n    case Symbol.match:\r\n    case Symbol.prototype:\r\n    case Symbol.replace:\r\n    case Symbol.search:\r\n    case Symbol.species:\r\n    case Symbol.split:\r\n    case Symbol.toPrimitive:\r\n    case Symbol.toStringTag:\r\n    case Symbol.unscopables:\r\n      return value.description;\r\n    default:\r\n      let description = value.description ? `\"${value.description}\"` : \"\";\r\n      return `Symbol(${description})`;\r\n  }\r\n}\r\n\r\nfunction dateToString(value: Date): string {\r\n  if (isNaN(value.getTime())) {\r\n    return `new Date(${value.toString()})`;\r\n  }\r\n  return `new Date(${value.toISOString()})`;\r\n}\r\n\r\nfunction errorToString(value: any): string {\r\n  let message = JSON.stringify(value.message),\r\n    fileName = JSON.stringify(value.fileName),\r\n    lineNumber = JSON.stringify(value.lineNumber);\r\n  return `new Error(${message}, ${fileName}, ${lineNumber})`;\r\n}\r\n\r\nfunction arrayToString(\r\n  value: Array<any>,\r\n  options: IJ2SOptions,\r\n  history: IJ2SHistory\r\n): string {\r\n  if (value.length === 0) return \"[]\";\r\n  let arrayValues = value.reduce(\r\n    (x1: any, x2: any, index: number) => {\r\n      history.references.push(index.toString());\r\n      let str = !!x1 ? `${x1}, ` : '';\r\n      str += stringifyRef(x2,options,history);\r\n      history.references.pop();\r\n      return str;\r\n    }, '');\r\n  return attachActions(getLocalRefs(value), `[${arrayValues}]`);\r\n}\r\n\r\nfunction getLocalRefs(value: any) {\r\n  return refs.filter(x => x.source === value)\r\n}\r\n\r\nfunction attachActions(localRefs: RefInstance[], result: string) {\r\n  if (localRefs.length > 0) {\r\n    counter = (counter++) % Number.MAX_SAFE_INTEGER;\r\n    const localName = `___j2s_${counter}`;\r\n    const actions = localRefs.reduce((x1: string, x2: RefInstance) => {\r\n      const action = converToAction(localName, x2);\r\n      refs.splice(refs.indexOf(x2), 1);\r\n      return x1 + action;\r\n    }, '');\r\n    return `(function(){ var ${localName} = ${result}; ${actions} return ${localName}; }())`;\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction converToAction(localName: string, r: RefInstance) {\r\n  const destIndex = r.historyRef.indexOf(r.source);\r\n  if (destIndex < 0) {\r\n    return '';\r\n  }\r\n\r\n  const dest = r.historyRef.slice(destIndex);\r\n  let sourceObj: any;\r\n  let path = '';\r\n  for (let i = 0; i < dest.length; i++) {\r\n    const destObj = dest[i];\r\n    if (destObj === r.source) {\r\n      path = localName;\r\n      sourceObj = r.source;\r\n    } else if (typeof destObj === 'string') {\r\n      path += `['${destObj.replace(/'/gi, '\\\\\\'')}']`;\r\n      sourceObj = sourceObj[destObj];\r\n    } else if (destObj !== sourceObj) {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  return `${path} = ${localName}; `;\r\n}\r\n\r\nfunction typedArrayToString(\r\n  value: any,\r\n  options: IJ2SOptions,\r\n  history: IJ2SHistory\r\n): string {\r\n  let arr = Array.from(value),\r\n    arrString = arrayToString(arr, options, history),\r\n    constructorName = value.constructor.name;\r\n  return `new ${constructorName}(${arrString})`;\r\n}\r\n\r\nfunction setToString(\r\n  value: Set<any>,\r\n  options: IJ2SOptions,\r\n  history: IJ2SHistory\r\n): string {\r\n  let setValues: string[] = [];\r\n\r\n  value.forEach((value1: any, value2: any, set: Set<any>) => {\r\n    setValues.push(stringifyRef(value2, options, history));\r\n  });\r\n\r\n  if (setValues.length === 0) return \"new Set()\";\r\n\r\n  return `new Set([${setValues.join(\", \")}])`;\r\n}\r\n\r\nfunction mapToString(\r\n  value: Map<any, any>,\r\n  options: IJ2SOptions,\r\n  history: IJ2SHistory\r\n): string {\r\n  let mapValues: string[] = [];\r\n\r\n  value.forEach((indexValue: any, key: any) => {\r\n    mapValues.push(\r\n      `[${stringifyRef(key, options, history)}, ${stringifyRef(\r\n        indexValue,\r\n        options,\r\n        history\r\n      )}]`\r\n    );\r\n  });\r\n\r\n  if (mapValues.length === 0) return \"new Map()\";\r\n\r\n  return `new Map([${mapValues.join(\", \")}])`;\r\n}\r\n\r\nfunction objectToString(\r\n  value: any,\r\n  options: IJ2SOptions,\r\n  history: IJ2SHistory\r\n): string {\r\n  let objectValues = [];\r\n\r\n  for (let propertyName in value) {\r\n    if (value.hasOwnProperty(propertyName)) {\r\n      history.references.push(propertyName);\r\n      let propertyValue = stringifyRef(value[propertyName], options, history);\r\n      history.references.pop();\r\n      if (propertyValue !== \"undefined\") {\r\n        if (!(/^[a-zA-Z]+$/).test(propertyName)) {\r\n          propertyName = `\"${propertyName}\"`;\r\n        }\r\n        objectValues.push(`${propertyName}: ${propertyValue}`);\r\n      }\r\n    }\r\n  }\r\n\r\n  if (objectValues.length === 0) return \"{}\";\r\n\r\n  return attachActions(getLocalRefs(value), `{\\n${objectValues.join(\",\\n\")}\\n}`);\r\n}\r\n\r\nfunction functionPropertiesToString(\r\n  functionName: string,\r\n  value: any,\r\n  options: IJ2SOptions,\r\n  history: IJ2SHistory\r\n): string {\r\n  let result = \"\";\r\n  for (let propertyName in value) {\r\n    if (value.hasOwnProperty(propertyName)) {\r\n      history.references.push(propertyName);\r\n      let propertyValue = stringifyRef(value[propertyName], options, history);\r\n      history.references.pop();\r\n      if (propertyValue !== \"undefined\") {\r\n        result += `${functionName}.${propertyName} = ${propertyValue};\\n`;\r\n      }\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction functionToString(\r\n  value: any,\r\n  options: IJ2SOptions,\r\n  history: IJ2SHistory\r\n): string {\r\n  let functionName = value.name || \"anonymousFunction\";\r\n  let functionObject = options.includeFunctionProperties\r\n    ? functionPropertiesToString(functionName, value, options, history)\r\n    : \"\";\r\n  history.references.push('prototype');\r\n  let functionPrototype = options.includeFunctionPrototype\r\n    ? functionPropertiesToString(\r\n        `${functionName}.prototype`,\r\n        value.prototype,\r\n        options,\r\n        history\r\n      )\r\n    : \"\";\r\n  history.references.pop();\r\n\r\n  let functionStr = String(value);\r\n  if (functionStr.indexOf('[native code]') > -1 && functionStr.length < 100) {\r\n    for (const nfName in nativeFunctions) {\r\n      if (nativeFunctions[nfName] === value) {\r\n        functionStr = nfName\r\n      }\r\n    }\r\n  }\r\n  if (!functionObject && !functionPrototype) {\r\n    return functionStr;\r\n  }\r\n\r\n  return attachActions(getLocalRefs(value), `(function(){\\n var ${functionName} = ${String(\r\n    functionStr\r\n  )};\\n ${functionObject}\\n ${functionPrototype}\\n return ${functionName};\\n}())`);\r\n}\r\n\r\nfunction arrayBufferToString(\r\n  value: ArrayBuffer,\r\n  options: IJ2SOptions,\r\n  history: IJ2SHistory\r\n): string {\r\n  if (!options.includeBuffers) return \"undefined\";\r\n  let str = typedArrayToString(new Int8Array(value), options, history);\r\n  return `(${str}).buffer`;\r\n}\r\n\r\nfunction dataViewToString(\r\n  value: DataView,\r\n  options: IJ2SOptions,\r\n  history: IJ2SHistory\r\n): string {\r\n  if (!options.includeBuffers) return \"undefined\";\r\n  let bufString = arrayBufferToString(value.buffer, options, history);\r\n  return `new DataView(${bufString}, ${value.byteOffset}, ${value.byteLength})`;\r\n}\r\n\r\n/**\r\n * Converts to string the value, if it wasn't before\r\n * @param value the value, that converts to string\r\n * @param references the references to stringified objects\r\n */\r\nfunction stringify(\r\n  value: any,\r\n  options: IJ2SOptions,\r\n  history: IJ2SHistory\r\n): string {\r\n  switch (getObjectType(value)) {\r\n    case \"undefined\":\r\n      return \"undefined\";\r\n    case \"null\":\r\n      return \"null\";\r\n    case \"boolean\":\r\n      return String(value);\r\n    case \"regexp\":\r\n      return String(value);\r\n    case \"string\":\r\n      return JSON.stringify(value);\r\n    case \"number\":\r\n      return numberToString(value);\r\n    case \"bigint\":\r\n      return `BigInt(${value})`;\r\n    case \"symbol\":\r\n      return symbolToString(value);\r\n    case \"date\":\r\n      return dateToString(value);\r\n    case \"error\":\r\n      return errorToString(value);\r\n    case \"array\":\r\n      return arrayToString(value, options, history);\r\n    case \"typedarray\":\r\n      return typedArrayToString(value, options, history);\r\n    case \"set\":\r\n      return setToString(value, options, history);\r\n    case \"map\":\r\n      return mapToString(value, options, history);\r\n    case \"object\":\r\n      return objectToString(value, options, history);\r\n    case \"function\":\r\n    case \"generatorfunction\":\r\n      return functionToString(value, options, history);\r\n    case \"arraybuffer\":\r\n      return arrayBufferToString(value, options, history);\r\n    case \"dataview\":\r\n      return dataViewToString(value, options, history);\r\n    case \"promise\":\r\n    case \"generator\":\r\n      return \"undefined\";\r\n    default:\r\n      return JSON.stringify(value);\r\n  }\r\n}\r\n\r\n/**\r\n * Stringify the value, if it wasn't before\r\n * @param value the value, that converts to string\r\n * @param references the references to stringified objects\r\n */\r\nfunction stringifyRef(\r\n  value: any,\r\n  options: IJ2SOptions,\r\n  history: IJ2SHistory\r\n): string {\r\n  const index = history.references.indexOf(value);\r\n  if (index < 0 || typeof(history.references[index]) === 'string') {\r\n    let objectType = getObjectType(value);\r\n    let referencesLength = history.references.length;\r\n    history.references.push(value);\r\n    switch (objectType) {\r\n      case \"object\":\r\n        if (history.nestedObjectsLeft <= 0) return \"undefined\";\r\n        history.nestedObjectsLeft--;\r\n        break;\r\n      case \"array\":\r\n      case \"typedarray\":\r\n        if (history.nestedArraysLeft <= 0) return \"undefined\";\r\n        history.nestedArraysLeft--;\r\n        break;\r\n      case \"function\":\r\n      case \"generatorfunction\":\r\n        if (history.nestedFunctionsLeft <= 0) return \"undefined\";\r\n        history.nestedFunctionsLeft--;\r\n        break;\r\n    }\r\n\r\n    let refString = stringify(value, options, history);\r\n\r\n    history.references.splice(referencesLength);\r\n    switch (objectType) {\r\n      case \"object\":\r\n        history.nestedObjectsLeft++;\r\n        break;\r\n      case \"array\":\r\n      case \"typedarray\":\r\n        history.nestedArraysLeft++;\r\n        break;\r\n      case \"function\":\r\n      case \"generatorfunction\":\r\n        history.nestedFunctionsLeft++;\r\n        break;\r\n    }\r\n\r\n    return refString;\r\n  } else {\r\n    refs.push({\r\n      historyRef: history.references.slice(0),\r\n      source: value\r\n    })\r\n  }\r\n  return \"null\";\r\n}\r\n\r\n/**\r\n * Converts JavaScript value to string\r\n * @param value the value of any type\r\n * @param options [optional] The options of conversion\r\n */\r\nfunction javaScriptToString(value: any, options?: IJ2SOptions): string {\r\n  options = options || {};\r\n  let concreteOptions: IJ2SOptions = {\r\n    includeFunctionProperties:\r\n      options.includeFunctionProperties === undefined\r\n        ? true\r\n        : options.includeFunctionProperties,\r\n    includeFunctionPrototype:\r\n      options.includeFunctionPrototype === undefined\r\n        ? true\r\n        : options.includeFunctionPrototype,\r\n    includeBuffers:\r\n      options.includeBuffers === undefined ? true : options.includeBuffers,\r\n    nestedObjectsAmount:\r\n      options.nestedObjectsAmount === undefined\r\n        ? Number.POSITIVE_INFINITY\r\n        : options.nestedObjectsAmount,\r\n    nestedArraysAmount:\r\n      options.nestedArraysAmount === undefined\r\n        ? Number.POSITIVE_INFINITY\r\n        : options.nestedArraysAmount,\r\n    nestedFunctionsAmount:\r\n      options.nestedFunctionsAmount === undefined\r\n        ? Number.POSITIVE_INFINITY\r\n        : options.nestedFunctionsAmount\r\n  };\r\n\r\n  return stringify(value, concreteOptions, {\r\n    references: [value],\r\n    nestedObjectsLeft: concreteOptions.nestedObjectsAmount as number,\r\n    nestedArraysLeft: concreteOptions.nestedArraysAmount as number,\r\n    nestedFunctionsLeft: concreteOptions.nestedFunctionsAmount as number\r\n  });\r\n}\r\n\r\nexport default javaScriptToString;\r\n"],"names":["types","typesToString","toString","buildInList","typedArrays","maps","sets","getInternalType","obj","call","forEach","name","toLowerCase","refs","counter","fillNativeFunctions","ext","objName","fromPrototype","protoPath","arrNames_1","Object","getOwnPropertyNames","prototype","_i","name_1","indexOf","nativeFunctions","functions","Array","JSON","Function","Date","String","numberToString","value","Number","isNaN","POSITIVE_INFINITY","NEGATIVE_INFINITY","EPSILON","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","MAX_VALUE","MIN_VALUE","Math","PI","E","LN10","LN2","LOG10E","LOG2E","SQRT1_2","SQRT2","symbolToString","Symbol","asyncIterator","hasInstance","isConcatSpreadable","iterator","match","replace","search","species","split","toPrimitive","toStringTag","unscopables","description","dateToString","getTime","toISOString","errorToString","stringify","message","fileName","lineNumber","arrayToString","options","history","length","arrayValues","reduce","x1","x2","index","references","push","str","stringifyRef","pop","attachActions","getLocalRefs","filter","x","source","localRefs","result","localName_1","actions","action","converToAction","splice","localName","r","destIndex","historyRef","sourceObj","dest","slice","path","i","destObj","typedArrayToString","arrString","from","constructor","setToString","setValues","value1","value2","set","join","mapToString","mapValues","indexValue","key","objectToString","objectValues","propertyName","hasOwnProperty","propertyValue","test","functionPropertiesToString","functionName","functionToString","functionObject","includeFunctionProperties","functionPrototype","includeFunctionPrototype","functionStr","nfName","arrayBufferToString","includeBuffers","Int8Array","dataViewToString","buffer","byteOffset","byteLength","getObjectType","objectType","referencesLength","nestedObjectsLeft","nestedArraysLeft","nestedFunctionsLeft","refString","javaScriptToString","concreteOptions","undefined","nestedObjectsAmount","nestedArraysAmount","nestedFunctionsAmount"],"mappings":"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"}